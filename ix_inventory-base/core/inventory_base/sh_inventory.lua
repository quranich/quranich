-- <|> Hello, fucker | Taxin2012 and PURP was here | Mysterious Zone Project | mzrp.ru <|>
local ix=ix local a=math.min local pairs=pairs local isnumber=isnumber local b=math.Clamp local c=hook.Add local d=net.Start local e=SERVER and net.Send local f=ix.plugin.list["inventory-base"]local g=ix.meta.character or{}local function h(m,n)if m then local o=m:GetItems()for p,q in next,o do local r=q.data and q.data.equipmentSlot or nil if r and string.match(r,n)then return q end end end end local function i(m,n)local o={}if m then local p=m:GetItems()for q,r in next,p do local s=r.data and r.data.equipmentSlot or nil if s and string.match(s,n)then o[#o+1]=r end end end return o end function g:UnEquipItems(m,n)m=m or self:GetEquipmentInventory()local o=self:GetInventory()local p=m:GetItems()for q,r in next,p do if n and n==r then continue end if r:GetData("equipmentSlot")==nil then r:Transfer(o:GetID(),nil,nil,self:GetPlayer())end end end function g:GetEquipmentInventory()local m=self:GetData("equipmentInventoryID")if m then local n=ix.inventory.Get(m)return n,m end end function g:GetEquipmentItemBySlotIndex(m)local n,o=self:GetEquipmentInventory()return h(n,m)end function g:GetEquipmentTableBySlotIndex(m)local n,o=self:GetEquipmentInventory()return i(n,m)end function g:GetEquipmentArmor()local m,n=self:GetEquipmentInventory()return h(m,"slotArmor")end function g:GetEquipmentBackpack()local m,n=self:GetEquipmentInventory()return h(m,"slotBackpack")end function g:GetEquipmentModifier()local m,n=self:GetEquipmentInventory()return h(m,"slotModifier")end function g:GetEquipmentDetector()local m,n=self:GetEquipmentInventory()return h(m,"slotDetector")end function g:GetEquipmentHelmet()local m,n=self:GetEquipmentInventory()return h(m,"slotHelmet")end function g:GetEquipmentMask()local m,n=self:GetEquipmentInventory()return h(m,"slotMask")end function g:GetEquipmentArtefacts()local m,n=self:GetEquipmentInventory()return i(m,"slotArtefact")end function g:GetEquipmentQuick()local m,n=self:GetEquipmentInventory()return i(m,"slotQuick")end function g:GetEquipmentWeapons()local m,n=self:GetEquipmentInventory()return i(m,"slotWeapon")end function g:GetItemsFromTable(m)local n,o,p=true,{},{}local q=self:GetInventory()local r=ix.item.list for s,t in next,m do local u=r[s]if not u then continue end t=tonumber(t)local v=q:GetItemsByUniqueID(s,true)for w,x in next,v do local y=x:GetData("itemStack",1)if t<=0 then break end if y>t then p[#p+1]={x,t}t=0 break elseif y<=t then t=t-y o[#o+1]=x end end if t>0 then n=false break end end return n,o,p end function g:GetArtefactContainers(m)m=m or self:GetEquipmentArmor()if m==nil then return 0 end local n=m.artefactContainers or 0 local o=m:GetUpgradesArtefactContainer()n=a(n+o,5)return n or 0 end function g:GetHelmetDisabled(m)m=m or self:GetEquipmentArmor()return m and m.helmetDisable or false end function g:GetProtectionStats()local m={[DMG_BURN]=0,[DMG_SHOCK]=0,[DMG_ACID]=0,[DMG_RADIATION]=0,[DMG_CLUB]=0,[DMG_GENERIC]=0,[DMG_BULLET]=0,}local n={}local o=self:GetEquipmentArtefacts()local p=self:GetEquipmentArmor()local q=self:GetEquipmentModifier()local r=self:GetEquipmentHelmet()local s=self:GetEquipmentMask()local t=self:GetEquipmentBackpack()for v,w in next,o do if w.slotIndex=="slotArtefact"and w.artCount then local x=w:GetData("artefacts",{})for y,z in next,x do local A=ix.item.list[z.uid]if A then n[#n+1]=A end end else n[#n+1]=w end end n[#n+1]=p n[#n+1]=q n[#n+1]=r n[#n+1]=s n[#n+1]=t local u={}for v,w in next,n do if w.isArtContainer then local z=w:GetData("containerItem")if z then w=ix.item.list[z]end end local x=w:GetUpgradesProtectStats()local y=w.artefactStat and w.artefactStat.equipData or w.protectStats if y then for z,A in pairs(y)do if not isnumber(A)then continue end if x and x[z]then A=A+x[z]end if ix.durability and w.hasDurability then A=A*(w:GetDurability()/ix.durability.durabilityMax)end local B=m[z]or 0 m[z]=b(B+A,-500,500)end end end return m end hook.Add("OnItemTransferred",f.uniqueID..":OnItemTransferred",function(m,n,o)local p=(n.owner and ix.char.loaded[n.owner]or(o.owner and ix.char.loaded[o.owner]or nil))if p then local q,r=p:GetEquipmentInventory()local s,t=n:GetID(),o:GetID()if(s==r or t==r)then local u=p:GetPlayer()local v=m:GetData("equipmentSlot")local w=m.slotIndex if w then if m.ActionEquipment then m:ActionEquipment(t==r,u,p)ix.log.Add(u,"itemAction","Equip",m)end local x=u:GetNetVar("extendedRender",{})if s~=r then x[w]={uid=m.uniqueID,skin=m:GetData("renderSkin")}else x[w]=nil end u:SetNetVar("extendedRender",x)m:SetData("equipmentSlot",t==r and w or nil)d("stalkerInventory.Refresh")e(u)end end end end)local j={["slotHelmet"]=true,["slotMask"]=true,["slotArmor"]=true,["slotBackpack"]=true,}c("CanTransferItem","stalkerInventoryBase.CanTransferItem",function(m,n,o)o=o or ix.item.inventories[0]local p=m.slotIndex if p~=nil and o.id~=0 then local q=ix.char.loaded local r,s,t,u=o.id,o.owner,n.id,n.owner local v,w=q[s],q[u]if w or v then local x=(w or v)local y=x:GetPlayer()local z,A=x:GetEquipmentInventory()if x:GetData("NVGEquiped")==m:GetID()then y:Notify("Предмет экипирован!")return false end if y:GetLocalVar("ragdoll",nil)~=nil and y:Alive()then y:Notify("Сейчас это недоступно!")return false end if(r==A or t==A)and y:IsRestricted()then y:Notify("Вы связаны!")return false end if(r==A or t==A)and y:GetNetVar("actEnterAngle",false)~=false then y:Notify("Нельзя выполнить во время действия!")return false end if(r==A or t==A)and y:GetNetVar("isEquipedItem",false)==true then if m.slotIndex and j[m.slotIndex]==true then y:Notify("Нельзя выполнить во время действия!!")return false end end if r==A then local B=x:GetEquipmentHelmet()local C=x:GetEquipmentMask()local D=x:GetEquipmentArmor()local E=x:GetEquipmentBackpack()local F,G=x:GetArtefactContainers(D),x:GetHelmetDisabled(D)if m.noEquip then return false end local H=z:GetItems()for I,J in next,H do local K=J.slotIndex if K==p and m.multiplySlots~=true then return false end end if p=="slotArtefact"then local I=x:GetEquipmentArtefacts()if(#I+1)>F then return false end end if G==true and p=="slotHelmet"then return false end if j[p]==true then local I={}if B and B.actorsDisableSlots then table.Merge(I,B.actorsDisableSlots)end if D and D.actorsDisableSlots then table.Merge(I,D.actorsDisableSlots)end local J=m.actorsBlackListTier if J then local K,L=nil,""for M,N in next,j do if M=="slotHelmet"and I[M]~=true then K=B L="шлема"elseif M=="slotMask"and I[M]~=true then K=C L="маски"elseif M=="slotArmor"and I[M]~=true then K=D L="брони"elseif M=="slotBackpack"and I[M]~=true then K=E L="предмета на спине"end if J and J[M]and J[M][0]==true and K==nil then y:Notify("Этот предмет нельзя надевать без "..L)return false end end if B then local M=B.actorsBlackListTier if(M and M[m.slotIndex]and M[m.slotIndex][m.actorsTier]==true)or(J and J["slotHelmet"]and J["slotHelmet"][B.actorsTier]==true)then y:Notify("Этот предмет нельзя надевать с этим шлемом!")return false end end if C then local M=C.actorsBlackListTier if(M and M[m.slotIndex]and M[m.slotIndex][m.actorsTier]==true)or(J and J["slotMask"]and J["slotMask"][C.actorsTier]==true)then y:Notify("Этот предмет нельзя надевать с этой маской!")return false end end if D then local M=D.actorsBlackListTier if(M and M[m.slotIndex]and M[m.slotIndex][m.actorsTier]==true)or(J and J["slotArmor"]and J["slotArmor"][D.actorsTier]==true)then y:Notify("Этот предмет нельзя надевать с этой броней!")return false end end if E then local M=E.actorsBlackListTier if(M and M[m.slotIndex]and M[m.slotIndex][m.actorsTier]==true)or(J and J["slotBackpack"]and J["slotBackpack"][E.actorsTier]==true)then y:Notify("Этот предмет нельзя надевать с этим предметом на спине!")return false end end end end end end end end)c("ScoreboardShow",f.uniqueID.."ScoreboardShow",function()return true end)local k={["upgradeFrame"]=true,["vendor"]=true,["lootingStorage"]=true,["openedStorage"]=true,["craftingFrame"]=true,["invModuleTradeFrame"]=true,}local function l()local m=ix.item.list for n,o in pairs(m)do o.functions.PlaceDrop={name="Поставить (выбросить)",icon="icon16/arrow_in.png",OnRun=function(p)local q=p.player local r=q:GetCharacter()local s=r:GetInventory()if p.noDrop==true then q:Notify("Этот предмет нельзя поставить")return false end if not IsValid(p.entity)and IsValid(q)and p.invID==s:GetID()and not timer.Exists("ixAct"..q:UniqueID())and hook.Run("CanTransferItem",p,s,ix.item.inventories[0])~=false and hook.Run("CanPlayerDropItem",q,p:GetID())~=false then if p.OnPrePlaceItem then p:OnPrePlaceItem(entity,q)end ix.item.Spawn(p.uniqueID,q:GetItemDropPos(),function(t,entity)entity:SetPos(q:GetItemDropPos(entity))ix.stalkerInventory.PlaceEntity(entity,q)if t.OnPlaceItem then t:OnPlaceItem(entity,q)end r:UpdateWeight()end,angle_zero,p.data)return true end q:Notify("Я не могу это сделать!")return false end,OnCanRun=function(p)local q=p.player local r=q:GetCharacter()local s=r:GetInventory()for t,u in next,(ix.gui or{})do if k[t]==true then return false end end return not IsValid(p.entity)and IsValid(q)and p.invID==s:GetID()and not timer.Exists("ixAct"..q:UniqueID())and hook.Run("CanTransferItem",p,s,ix.item.inventories[0])~=false and hook.Run("CanPlayerDropItem",q,p:GetID())~=false end}end end hook.Add("Initialize",f.uniqueID.."Initialize_Place",l)c("InitPostEntity",f.uniqueID.."InitPostEntity",l)hook.Add("Kouka.Net.Auth",f.uniqueID.."Kouka.Net.Auth_Place",l)l()