-- <|> Hello, fucker | Taxin2012 and PURP was here | Mysterious Zone Project | mzrp.ru <|>
local a=ix.plugin.list["inventory-module-aitems-list"]if SERVER then util.AddNetworkString("ixItemsWeaponDetach_ARC9")util.AddNetworkString("ixItemsWeaponSync_ARC9")else net.Receive("ixItemsWeaponDetach_ARC9",function()local c=LocalPlayer()local d=net.ReadString()local e=net.ReadUInt(32)local f=net.ReadString()local g=net.ReadUInt(32)local h=c:GetWeapon(d)if not IsValid(h)then return end if h:GetNetVar("ixItem")~=e then return end local i=h:LocateSlotFromAddress(g)if not i then return end if i.Integral then h:Attach(g,i.Integral)else h:DetachAllFromSubSlot(g)end h:SendWeapon()h:PostModify()end)net.Receive("ixItemsWeaponSync_ARC9",function()local c=LocalPlayer()local d=net.ReadString()local e=c:GetWeapon(d)if IsValid(e)then local f=e:GetNetVar("ixItem",nil)local g=f and ix.item.instances[f]if g then g:UpdateUpgrades(true)end end end)end local function b(c,d,e)local f=e.weaponClass if not f then return end local g=weapons.Get(f)if not g then return end for h,i in next,d do if i and istable(i)then for j,k in next,i do if j=="Installed"then local l=ix.item.list[k]if l then local m=g.Attachments[h]if m then if m.FreeInstalled and m.FreeInstalled==k then continue end end local n=ARC9.GetAttTable(k)if n and n.isUpgrade then continue end table.insert(c,{name=l.name,data={k},})end end if j=="SubAttachments"and k and table.IsEmpty(k)==false then b(c,k,e)end end end end end function DetachAttachmentsFromItem(c,d,e,f,g,h)local i=g or f local j=d.weaponClass if not j then return end local k=weapons.Get(j)if not k then return end for l,m in pairs(i)do local n=e or m.Installed if n then local o=k.Attachments[l]if o then if o.FreeInstalled and o.FreeInstalled==n then i[l]=nil continue end end local p=ARC9.GetAttTable(n)if p and p.isUpgrade then if m.SubAttachments and table.IsEmpty(m.SubAttachments)==false then local r,s=DetachAttachmentsFromItem(c,d,nil,f,m.SubAttachments,true)if not r then return r,s end end i[l]=nil continue end local q=h or(m.Installed==n)if q then if not m.SubAttachments or table.IsEmpty(m.SubAttachments)then local r=c:Add(m.Installed,1)if r then i[l]=nil if h then DetachAttachmentsFromItem(c,d,e,f)end return true else return false,"Не удалось снять "..n..": недостаточно места"end else local r,s=DetachAttachmentsFromItem(c,d,e,f,m.SubAttachments,true)if not r then return r,s end end elseif m.SubAttachments and not table.IsEmpty(m.SubAttachments)then local r,s=DetachAttachmentsFromItem(c,d,e,f,m.SubAttachments)if not r then return r,s end end elseif n==nil and m.SubAttachments and not table.IsEmpty(m.SubAttachments)then local o,p=DetachAttachmentsFromItem(c,d,e,f,m.SubAttachments)if not o then return o,p end end end return true,"full"end function ix.itemsList.weapons_listregistration(c,d,e)local f=d:lower()local g=weapons.Get(f)if not g or not e then return end ALWAYS_RAISED[f]=true if e.AntiHitReg==true and LeyHitreg and LeyHitreg.AddIgnoreWeapon then LeyHitreg:AddIgnoreWeapon(f)end if SERVER then local n=weapons.GetStored(f)if n then if n.Primary then n.Primary.DefaultClip=0 if e.Primary then for o,p in next,e.Primary do n.Primary[o]=p end end end if n.Secondary and e.Secondary then for o,p in next,e.Secondary do n.Secondary[o]=p end end end end local h=g.PrintName local i=e.name or(h or"#название")local j=e.description or(h or"#описание")local k=e.model or(g.WorldModel or"models/props_junk/garbage_bag001a.mdl")local l=(e.slotType or"first")local m=((e.slotType or"first")=="first")and"slotFirstWeapon"or"slotSecondaryWeapon"c.weaponClass=f c.name=i c.description=j c.model=k c.slotType=l c.slotIndex=m c.skin=itemSkin c.hasDurability=true c.weaponCategory=f c.ARC9=g.Base=="arc9_base_mz"and true or nil if g.Base=="arc9_mz__melee_base"then c.ARC9=true end c.GetDescription=function(n)local o=weapons.Get(f)return o.Description or(n.description or"#DESC")end c.functions.TakeOutAttachments={name="Снять улучшение",icon="icon16/arrow_up.png",isMulti=true,order=1,multiOptions=function(n,o)local p={}local q=n:GetData("attachments",{})if q and table.IsEmpty(q)==false then b(p,q,n)end return p end,OnRun=function(n,o)local p=n.player if not p then return false end local q=p:GetCharacter()if not q then return false end local r=o and o[1]if not r then return false end local s=ix.item.list[r]if not s then return false end local t=n:GetID()local u=n.weapon if IsValid(u)and u:GetNetVar("ixItem")==t then p:Notify("Нельзя снять с экипированного оружия, используйте меню кастомизации")else local v=q:GetInventory()if not v then return false end local w=n:GetData("attachments",{})local x,y=DetachAttachmentsFromItem(v,n,r,w)if x==false then p:Notify(y)end n:SetData("attachments",w)end return false end,OnCanRun=function(n)local o=n:GetData("attachments",{})return IsValid(n.entity)==false and IsValid(n.player)and table.IsEmpty(o)==false end}c.functions.unload={name="Разрядить запас",tip="useTip",icon="icon16/arrow_down.png",OnCanRun=function(n)return not IsValid(n.entity)and IsValid(n.player)and not string.find(n.uniqueID,"melee")end,OnRun=function(n)local o=n.player if not IsValid(o)then return false end if string.find(n.uniqueID,"melee")then return false end o:RequestString("Количество","Введите желаемое количество патронов",function(p)p=tonumber(p)if p==nil or p==0 then o:Notify("Необходимо ввести число отличное от 0!")return false end local q=n.uniqueID local r=weapons.Get(q)if not r then o:Notify("Не удалось найти зарегистрированное оружие!")return false end local s=r.Ammo or r.Primary.Ammo local t=o:GetAmmoCount(s)p=math.floor(p)p=math.Clamp(p,1,t)local u=t-p local v=o:GetCharacter()if not v then return false end if ix.itemsList.data.ammo[s]then if p>0 then local w=v:GetInventory()w:Add(s,1,{itemStack=p})o:SetAmmo(u,s)o:Notify("Вы успешно разрядили оружие на - "..p.." патрон(а/ов)")else o:Notify("В запасе пусто!")end else o:Notify("Не удалось найти тип патронов: "..s)end end,1)return false end,}c.functions.unloadmag={name="Разрядить магазин",tip="useTip",icon="icon16/arrow_down.png",OnCanRun=function(n)return not IsValid(n.entity)and IsValid(n.player)and not string.find(n.uniqueID,"melee")end,OnRun=function(n)local o=n.player if not IsValid(o)then return false end if string.find(n.uniqueID,"melee")then return false end local p=n.uniqueID local q=weapons.Get(p)if not q then o:Notify("Не удалось найти зарегистрированное оружие!")return false end local r=q.Ammo or q.Primary local s=o:GetWeapon(p)local t=0 if IsValid(s)then t=s:Clip1()else t=n:GetData("primaryAmmo",0)end local u=o:GetCharacter()if not u then return false end local v=u:GetInventory()if ix.itemsList.data.ammo[r]then n:SetData("primaryAmmo",0)if IsValid(s)then s:SetClip1(0)if t>0 then o:SetAmmo(o:GetAmmoCount(r)+t,r)end else if t>0 then v:Add(r,1,{itemStack=t})end end if t~=0 then o:Notify("Вы успешно разрядили магазин оружия на - "..t.." патрон(а/ов)")else o:Notify("В магазине пусто!")end else o:Notify("Не удалось найти тип патронов: "..r)return false end return false end,}c.functions.unloadmagClip2={name="Разрядить подствол",tip="useTip",icon="icon16/arrow_down.png",OnCanRun=function(n)local o=n.player local p=n.uniqueID local q=weapons.Get(p)if not q then return false end if not(q.Secondary and q.Secondary.Ammo)then return false end local r=0 local s=o:GetWeapon(p)r=o:GetAmmoCount(q.Secondary.Ammo)return not IsValid(n.entity)and IsValid(n.player)and not string.find(n.uniqueID,"melee")and r>0 end,OnRun=function(n)local o=n.player if not IsValid(o)then return false end if string.find(n.uniqueID,"melee")then return false end local p=n.uniqueID local q=weapons.Get(p)if not q then o:Notify("Не удалось найти зарегистрированное оружие!")return false end if not(q.Secondary and q.Secondary.Ammo)then o:Notify("Не удалось найти Secondary ammo!")return false end local r=q.Secondary.Ammo local s=o:GetWeapon(p)local t=o:GetAmmoCount(r)local u=o:GetCharacter()if not u then return false end local v=u:GetInventory()if ix.itemsList.data.ammo[r]then local w=u:GetData("ammo",{})w[r]=nil u:SetData("ammo",w)if IsValid(s)then s:SetClip2(0)end o:SetAmmo(0,r)if t>0 then v:Add(r,1,{itemStack=t})end if t~=0 then o:Notify("Вы успешно разрядили подствол оружия на - "..t.." патрон(а/ов)")else o:Notify("В магазине пусто!")end end return false end,}function c:UpdateUpgrades(n)if self.ARC9 then local o=self:GetOwner()local p=o:GetWeapon(self.weaponClass)p.initUpgrades=WaitGroup:new(p,self)if IsValid(o)and IsValid(p)then if SERVER then ARC9:PlayerSendAttInv(o)timer.Simple(1,function()net.Start("ixItemsWeaponSync_ARC9")net.WriteString(f)net.Send(o)end)end timer.Simple(.25,function()if IsValid(p)and IsValid(o)then local q=p:GetClass()local r={}local s=self:GetData("upgrades",{})for u,v in next,s do for w,x in next,v do local y=ix.upgradeRepair:GetUpgradeTable(u,x)local z=y.attachmentInstalled local A=y.weaponStats if z then local B=p:GetSubSlotList()if z and isstring(z)then z={z}end for C,D in ipairs(z)do for E,F in next,B do local G=p.initUpgrades if o.ARC9_AttInv[D]==nil then o.ARC9_AttInv[D]=1 end local H=p:Attach(F.Address,D,true)if H==true then G:Add(1)break end end end end if A then for B,C in pairs(A)do local D=g[B]or 1 r[B]=(r[B]or 1)+(D*(C-1))end end end end for u,v in next,r do p[u]=math.max(0,r[u])end local t=p.initUpgrades t:Wait(function(u,v)local w=v:GetData("attachments",{})table.Merge(u.Attachments,w)u.ixDetect=true u:SetClip1(self:GetData("primaryAmmo",0))u:SetClip2(self:GetData("secondaryAmmo",0))u:PostModify()if SERVER then u:SendWeapon()end end)end end)end end end function c:OnEntityTakeDamage(n,o)return false end function c:ActionEquipment(n,o,p)local q=self.weaponClass o.carryWeapons=o.carryWeapons or{}if n==true then if o:HasWeapon(q)then o:StripWeapon(q)end local r=o:Give(q,false)if IsValid(r)then o.carryWeapons[q]=r if self.isGrenade==true then r:SetClip1(1)else local s=self:GetData("primaryAmmo",0)local t=self:GetData("secondaryAmmo",0)if s>0 then r:SetClip1(s)end if t>0 then r:SetClip2(t)end end r.ixItem=self r:SetNetVar("ixItem",self:GetID())self.weapon=r if r.ARC9 then ARC9:PlayerSendAttInv(o)timer.Simple(.25,function()self:UpdateUpgrades()end)end else print(Format("[Helix] Cannot equip weapon - %s does not exist!",q))end else local r=o.carryWeapons[q]if not IsValid(r)then r=o:GetWeapon(q)end if IsValid(r)then self:SetData("primaryAmmo",r:Clip1())self:SetData("secondaryAmmo",r:Clip2())o:StripWeapon(q)else o:StripWeapon(q)print(Format("[Helix] Cannot unequip weapon - %s does not exist!",q))end o.carryWeapons[self.weaponCategory]=nil end return true end end if IX_PLUGINS_LOADED and ix.itemsList and ix.itemsList.CoreItemsRegistration then ix.itemsList.CoreItemsRegistration()end